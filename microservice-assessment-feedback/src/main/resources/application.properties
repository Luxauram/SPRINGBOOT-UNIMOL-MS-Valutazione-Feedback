# ==============================================================
# ASSESSMENT-FEEDBACK CONFIGURATION
# ==============================================================

# Server Configuration
server.port=${SERVER_PORT_AF:8082}
spring.application.name=${SPRING_APPLICATION_NAME_AF:microservice-assessment-feedback}
app.version=${APP_VERSION:1.0.0}
app.description=${APP_DESCRIPTION_AF:Microservizio responsabile di aggiunta e visualizzazione del feedback fornito dai docenti sui compiti e sugli esami}

# Profile Configuration
spring.profiles.active=${SPRING_PROFILES_ACTIVE_DEV:dev}

# ===============================
# DATABSE CONFIG - POSTGRES
# ===============================
spring.datasource.url=${DB_PG_NAME_URL_AF:jdbc:postgresql://localhost:5432/assessment_feedback_db}
spring.datasource.username=${DB_PG_USER}
spring.datasource.password=${DB_PG_PASSWORD}
spring.datasource.driver-class-name=${DATA_SOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

spring.jpa.properties.hibernate.dialect=${JPA_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.format_sql=${JPA_HIBERNATE_FORMAT_SQL:true}
spring.jpa.generate-ddl=${JPA_GEN_DDL:true}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=${JPA_HIBERNATE_NON_CTX_CREATION:true}
spring.jpa.properties.hibernate.default_schema=${JPA_HIBERNATE_DEF_SCHEMA:public}

# ================================
# MESSAGE BROKER CONFIG - RABBITMQ
# ================================

# RabbitMQ Configuration
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USER}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}

# Dead Letter Queue configuration
rabbitmq.exchange.dlx=${RABBITMQ_EXCHANGE_DLX:unimol.dlx}
rabbitmq.queue.dlq=${RABBITMQ_QUEUE_DLQ:unimol.dlq}

# TTL Configuration
rabbitmq.message.ttl=${RABBITMQ_MSG_TTL:86400000}

# ===================================================================
# RABBITMQ - PUBLISHER QUEUES
# ===================================================================

# RabbitMQ Custom Properties
rabbitmq.exchange.assessments=${RABBITMQ_EXCHANGE_ASSESSMENTS:unimol.exchange}

# Assessment Queues
rabbitmq.queue.assessment.created=${RABBITMQ_QUEUE_ASSESSMENT_CREATED:assessment.created.queue}
rabbitmq.queue.assessment.updated=${RABBITMQ_QUEUE_ASSESSMENT_UPDATED:assessment.updated.queue}
rabbitmq.queue.assessment.deleted=${RABBITMQ_QUEUE_ASSESSMENT_DELETED:assessment.deleted.queue}

# Feedback Queues
rabbitmq.queue.feedback.created=${RABBITMQ_QUEUE_FEEDBACK_CREATED:feedback.created.queue}
rabbitmq.queue.feedback.updated=${RABBITMQ_QUEUE_FEEDBACK_UPDATED:feedback.updated.queue}
rabbitmq.queue.feedback.deleted=${RABBITMQ_QUEUE_FEEDBACK_DELETED:feedback.deleted.queue}

# Survey Queues
rabbitmq.queue.survey.completed=${RABBITMQ_QUEUE_SURVEY_COMPLETED:survey.completed.queue}

# Survey Response Queues
rabbitmq.queue.survey.response.submitted=${RABBITMQ_QUEUE_SURVEY_RESPONSE_SUBMITTED:survey.response.submitted.queue}

# ===================================================================
# RABBITMQ - CONSUMER QUEUES
# ===================================================================

# Assignment Queues - Da Gestione Compiti (Vittorio)
rabbitmq.queue.assignmentSubmitted=${RABBITMQ_QUEUE_ASSIGNMENT_SUBMITTED:assignment.submitted.queue}
rabbitmq.queue.assignmentCreated=${RABBITMQ_QUEUE_ASSIGNMENT_CREATED:assignment.created.queue}
rabbitmq.queue.assignmentUpdated=${RABBITMQ_QUEUE_ASSIGNMENT_UPDATED:assignment.updated.queue}

# Exam Queues - Da Gestione Esami (Luca)
rabbitmq.queue.examCompleted=${RABBITMQ_QUEUE_EXAM_COMPLETED:exam.completed.queue}
rabbitmq.queue.examGradeRegistered=${RABBITMQ_QUEUE_EXAM_GRADE_REGISTERED:exam.grade.registered.queue}

# Course Management Queues - Da Gestione Corsi (Marco)
rabbitmq.queue.courseCreated=${RABBITMQ_QUEUE_COURSE_CREATED:course.created.queue}
rabbitmq.queue.courseDeleted=${RABBITMQ_QUEUE_COURSE_DELETED:course.deleted.queue}

# User Management Queues - Da Gestione Utenti (Mauro)
rabbitmq.queue.userCreated=${RABBITMQ_QUEUE_USER_CREATED:user.created.queue}
rabbitmq.queue.userUpdated=${RABBITMQ_QUEUE_USER_UPDATED:user.updated.queue}
rabbitmq.queue.userDeleted=${RABBITMQ_QUEUE_USER_DELETED:user.deleted.queue}
rabbitmq.queue.teacherCreated=${RABBITMQ_QUEUE_TEACHER_CREATED:teacher.created.queue}
rabbitmq.queue.studentCreated=${RABBITMQ_QUEUE_STUDENT_CREATED:student.created.queue}
rabbitmq.queue.roleAssigned=${RABBITMQ_QUEUE_ROLE_ASSIGNED:role.assigned.queue}

# ===============================
# CORS CONFIGURATION
# ===============================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS_AF:http://localhost:3000, http://localhost:8080, http://localhost:8081}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}

# ===============================
# JWT CONFIGURATION
# ===============================
jwt.private-key=${JWT_PRIVATE_KEY}
jwt.expiration=${JWT_EXPIRATION:3600}
jwt.public-key=${JWT_PUBLIC_KEY}

# Logging JWT Configuration
logging.level.org.springframework.security=${LOGGING_LEVEL_SECURITY:DEBUG}
logging.level.org.springframework.security.oauth2=${LOGGING_LEVEL_SECURITY_OAUTH2:DEBUG}
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}

# ===============================
# ACTUATOR CONFIGURATION
# ===============================
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_INCLUDE:health,info,metrics,env,beans,threaddump,logfile,heapdump}
management.endpoint.health.show-details=${MANAGEMENT_HEALTH_SHOW_DETAILS:always}

# ===============================
# LOGGING CONFIGURATION
# ===============================
logging.level.it.unimol.microservice_assessment_feedback=${LOGGING_LEVEL_APP:DEBUG}

# Custom logging pattern
logging.pattern.console=${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n}

# ===============================
# SWAGGER/OPENAPI CONFIGURATION
# ===============================
springdoc.api-docs.path=${SWAGGER_API_DOCS_PATH:/v3/api-docs}
springdoc.swagger-ui.path=${SWAGGER_UI_PATH:/swagger-ui.html}
springdoc.swagger-ui.operationsSorter=${SWAGGER_UI_OP_SORTER:method}

