# ==============================================================
# USER-ROLE CONFIGURATION
# ==============================================================

# Server Configuration
server.port=${SERVER_PORT_UR:8081}
spring.application.name=${SPRING_APPLICATION_NAME_UR:microservice-user-role}
app.version=${APP_VERSION:1.0.0}
app.description=${APP_DESCRIPTION_UR:Microservizio responsabile di autenticazione, autorizzazione e gestione delle informazioni degli utenti e dei loro ruoli nel sistema}

# Profile Configuration
spring.profiles.active=${SPRING_PROFILES_ACTIVE_DEV:dev}

# ===============================
# DATABSE CONFIG - POSTGRES
# ===============================
spring.datasource.url=${DB_PG_NAME_URL_UR:jdbc:postgresql://localhost:5433/utenti_db}
spring.datasource.username=${DB_PG_USER}
spring.datasource.password=${DB_PG_PASSWORD}
spring.datasource.driver-class-name=${DATA_SOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

spring.jpa.properties.hibernate.dialect=${JPA_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.format_sql=${JPA_HIBERNATE_FORMAT_SQL:true}
spring.jpa.generate-ddl=${JPA_GEN_DDL:true}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=${JPA_HIBERNATE_NON_CTX_CREATION:true}
spring.jpa.properties.hibernate.default_schema=${JPA_HIBERNATE_DEF_SCHEMA:public}

# ===============================
# RABBITMQ
# ===============================

# RabbitMQ Configuration
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USER}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}

# RabbitMQ Queue Configuration
rabbitmq.exchange.users=${RABBITMQ_EXCHANGE_USERS:unimol.exchange}

rabbitmq.queue.userCreated=${RABBITMQ_QUEUE_USER_CREATED:user.created.queue}
rabbitmq.queue.userUpdated=${RABBITMQ_QUEUE_USER_UPDATED:user.updated.queue}
rabbitmq.queue.userDeleted=${RABBITMQ_QUEUE_USER_DELETED:user.deleted.queue}

rabbitmq.queue.roleAssigned=${RABBITMQ_QUEUE_ROLE_ASSIGNED:role.assigned.queue}

# TTL Configuration
#rabbitmq.message.ttl=${RABBITMQ_MSG_TTL}

# ===============================
# CORS CONFIGURATION
# ===============================
management.endpoints.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS_UR}
management.endpoints.web.cors.allowed-methods=${CORS_ALLOWED_METHODS}
management.endpoints.web.cors.allowed-headers=${CORS_ALLOWED_HEADERS}

# ===============================
# JWT CONFIGURATION
# ===============================
jwt.private-key=${JWT_PRIVATE_KEY}
jwt.expiration=${JWT_EXPIRATION}
jwt.public-key=${JWT_PUBLIC_KEY}

# Logging JWT Configuration
logging.level.org.springframework.security=${LOGGING_LEVEL_SECURITY:DEBUG}
logging.level.org.springframework.security.oauth2=${LOGGING_LEVEL_SECURITY_OAUTH2:DEBUG}
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}

# ===============================
# ACTUATOR CONFIGURATION
# ===============================
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_INCLUDE:health,info,metrics,env,beans,threaddump,logfile,heapdump}
management.endpoint.health.show-details=${MANAGEMENT_HEALTH_SHOW_DETAILS:always}

# ===============================
# LOGGING CONFIGURATION
# ===============================
logging.level.it.unimol.microservice_user_role=${LOGGING_LEVEL_APP:DEBUG}

# Custom logging pattern
logging.pattern.console=${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n}

# ===============================
# SWAGGER/OPENAPI CONFIGURATION
# ===============================
springdoc.api-docs.path=${SWAGGER_API_DOCS_PATH:/v3/api-docs}
springdoc.swagger-ui.path=${SWAGGER_UI_PATH:/swagger-ui.html}
springdoc.swagger-ui.operationsSorter=${SWAGGER_UI_OP_SORTER:method}
